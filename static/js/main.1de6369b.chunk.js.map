{"version":3,"sources":["components/Button.js","components/ModalBox.js","components/Nav.js","components/Tab.js","components/Toolbar/Toolbar.js","components/Editor.js","components/Previewer.js","App.js","reportWebVitals.js","index.js"],"names":["Button","displayTooltip","aria","handleClick","tooltipId","tooltipInfo","icon","addClass","class","onClick","role","id","ModalBox","showModal","setShowModal","darkMode","modalRef","useRef","useEffect","eventHandler","event","target","current","document","addEventListener","removeEventListener","ref","className","href","rel","Nav","setDarkMode","Tab","toggleClass","children","Toolbar","for","Editor","toggleTab","markdown","setMarkdown","onChange","e","value","name","autoFocus","spellCheck","Previewer","remarkPlugins","remarkGfm","components","code","node","inline","props","match","exec","String","replace","style","vscDarkPlus","vs","customStyle","margin","padding","language","PreTag","App","useState","localStorage","getItem","placeholder","JSON","parse","setToggleTab","storageAvailable","setItem","console","log","copyToClipboard","a","navigator","clipboard","writeText","alert","type","storage","window","x","removeItem","DOMException","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1de6369b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Button({\r\n  displayTooltip,\r\n  aria,\r\n  handleClick,\r\n  tooltipId,\r\n  tooltipInfo,\r\n  icon,\r\n  addClass\r\n}) {\r\n  return (\r\n    // BUTTON\r\n    <button\r\n      aria-describedby={aria}\r\n      class={`z-40 group relative h-34px  p-1 text-gray-900 bg-white opacity-75 hover:opacity-95 hover:bg-gray-300 active:bg-gray-400 dark:text-gray-200 dark:bg-gray-800 dark:hover:bg-gray-600 dark:active:bg-gray-700  border shadow dark:border-gray-700 rounded-lg ${addClass}`}\r\n      onClick={handleClick}\r\n    >\r\n      {/* TOOLTIP */}\r\n      {displayTooltip && (\r\n        <span\r\n          role=\"tooltip\"\r\n          id={tooltipId}\r\n          class=\"z-50 invisible group-hover:visible text-xs absolute top-9 -left-5 rounded shadow-md p-1 text-gray-900 bg-gray-300 dark:bg-gray-600 dark:text-gray-200\"\r\n        >\r\n          {tooltipInfo}\r\n        </span>\r\n      )}\r\n      {/* TOOLTIP END */}\r\n      {/* ICON */}\r\n      <span class=\"material-icons\">{icon}</span>\r\n      {/* ICON END */}\r\n    </button>\r\n    // BUTTON END\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport \"../App.css\";\r\nimport \"github-markdown-css\";\r\nimport Button from \"./Button\";\r\n\r\nexport default function ModalBox({ showModal, setShowModal, darkMode }) {\r\n  // Get the modal\r\n  const modalRef = useRef();\r\n\r\n  useEffect(() => {\r\n    // When the user click anywhere outside of the modal, close it\r\n    function eventHandler(event) {\r\n      if (event.target === modalRef.current) {\r\n        setShowModal(false);\r\n      }\r\n    }\r\n    document.addEventListener(\"mousedown\", eventHandler);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", eventHandler);\r\n    };\r\n  });\r\n\r\n  // Don't return content unless showModal is true\r\n  if (!showModal) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    // {/* <!-- The Modal --> */}\r\n    <div\r\n      ref={modalRef}\r\n      className=\"modal fixed z-50 left-0 top-0 w-full h-full bg-black bg-opacity-40\"\r\n    >\r\n      {/* <!-- Modal content --> */}\r\n      <div\r\n        className={`markdown-body m-10-auto max-w-480px max-h-67 p-5 border dark:border-gray-700 w-full overflow-auto shadow-2xl ${\r\n          darkMode ? \"markdown-body-dark\" : \"markdown-body-light\"\r\n        }`}\r\n      >\r\n        <div className=\"w-420px\">\r\n          <div className=\"flex justify-between items-center\">\r\n            <h1>Markdown cheat sheet</h1>\r\n            {/* Close Button */}\r\n            <Button\r\n              displayTooltip={false}\r\n              handleClick={() => setShowModal(false)}\r\n              icon=\"close\"\r\n            />\r\n            {/* Close Button End */}\r\n          </div>\r\n\r\n          <h2>Basic Syntax</h2>\r\n\r\n          <table className=\"w-full\">\r\n            <thead>\r\n              <tr>\r\n                <th>Element</th>\r\n                <th>Markdown Syntax</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>Heading</td>\r\n                <td>\r\n                  <code># H1</code> <br />\r\n                  <code>## H2</code> <br />\r\n                  <code>### H3</code>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Bold</td>\r\n                <td>\r\n                  <code>**bold text**</code>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Italic</td>\r\n                <td>\r\n                  <code>*italicized text*</code>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Blockquote</td>\r\n                <td>\r\n                  <code>&gt; blockquote</code>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Ordered List</td>\r\n                <td>\r\n                  <code>1. First item</code>\r\n                  <br />\r\n                  <code>2. Second item</code>\r\n                  <br />\r\n                  <code>3. Third item</code>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Unordered List</td>\r\n                <td>\r\n                  <code>- First item</code>\r\n                  <br />\r\n                  <code>- Second item</code>\r\n                  <br />\r\n                  <code>- Third item</code>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Code</td>\r\n                <td>\r\n                  <code>`code`</code>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Horizontal Rule</td>\r\n                <td>\r\n                  <code>---</code>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Link</td>\r\n                <td>\r\n                  <code>[title](https://www.example.com)</code>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Image</td>\r\n                <td>\r\n                  <code>![alt text](image.jpg)</code>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <h2 className=\"pt-4\">Extended Syntax</h2>\r\n\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Element</th>\r\n                <th>Markdown Syntax</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>Table</td>\r\n                <td>\r\n                  <code>\r\n                    | Syntax | Description |<br />\r\n                    | ----------- | ----------- |<br />\r\n                    | Header | Title |<br />| Paragraph | Text |\r\n                  </code>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Fenced Code Block</td>\r\n                <td>\r\n                  <code>\r\n                    ```\r\n                    <br />\r\n                    &#123;\r\n                    <br />\r\n                    &nbsp;&nbsp;\"firstName\": \"John\",\r\n                    <br />\r\n                    &nbsp;&nbsp;\"lastName\": \"Smith\",\r\n                    <br />\r\n                    &nbsp;&nbsp;\"age\": 25\r\n                    <br />\r\n                    &#125;\r\n                    <br />\r\n                    ```\r\n                  </code>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Footnote</td>\r\n                <td>\r\n                  <code>Here's a sentence with a footnote. [^1]</code>\r\n                  <br /> <br />\r\n                  <code>[^1]: This is the footnote.</code>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Heading ID</td>\r\n                <td>\r\n                  <code>### My Great Heading &#123;#custom-id&#125;</code>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Definition List</td>\r\n                <td>\r\n                  <code>term</code>\r\n                  <br />\r\n                  <code>: definition</code>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Strikethrough</td>\r\n                <td>\r\n                  <code>~~The world is flat.~~</code>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Task List</td>\r\n                <td>\r\n                  <code>- [x] Write the press release</code>\r\n                  <br />\r\n                  <code>- [ ] Update the website</code>\r\n                  <br />\r\n                  <code>- [ ] Contact the media</code>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Emoji</td>\r\n                <td>\r\n                  <code>Copy and paste the required emoji.</code>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Highlight</td>\r\n                <td>\r\n                  <code>\r\n                    I need to highlight these\r\n                    ==very&nbsp;important&nbsp;words==.\r\n                  </code>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <br />\r\n          <small className=\"pb-2\">\r\n            This cheat sheet was derived from:{\" \"}\r\n            <a\r\n              href=\"https://www.markdownguide.org/cheat-sheet\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              www.markdownguide.org/cheat-sheet\r\n            </a>\r\n          </small>\r\n          <br />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nexport default function Nav({ darkMode, setDarkMode }) {\r\n  return (\r\n    // NAV BAR\r\n    <nav className=\"NAV pt-2 px-4 pb-2 w-full flex justify-between items-center bg-white dark:bg-gray-800 shadow\">\r\n      <div className=\"empty-div-for-flex\"></div>\r\n\r\n      {/* HEADER */}\r\n      <h1 className=\"title text-2xl\">Markdown Previewer</h1>\r\n      {/* HEADER END */}\r\n\r\n      {/* DARK MODE BTN CONTAINER */}\r\n      <div className=\"DARK-MODE-CONTAINER flex\">\r\n        {/* DARK MODE BUTTON */}\r\n        <Button\r\n          displayTooltip={true}\r\n          aria=\"tooltip1\"\r\n          handleClick={() => setDarkMode(!darkMode)}\r\n          tooltipId=\"tooltip1\"\r\n          tooltipInfo=\"Toggle dark&nbsp;mode\"\r\n          icon={darkMode ? \"light_mode\" : \"dark_mode\"}\r\n          addClass=\"z-50\"\r\n        />\r\n        {/* DARK MODE BUTTON END*/}\r\n      </div>\r\n      {/* DARK MODE BTN CONTAINER END */}\r\n    </nav>\r\n    // NAV BAR END\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Tab({ toggleClass, handleClick, children }) {\r\n  return (\r\n    // TAB\r\n    <button\r\n      className={`z-10 text-base  font-medium shadow clip-path-inset rounded-t-lg hover:opacity-95 dark:border-gray-700 \r\n      lg:bg-white lg:border-b-0 lg:border lg:opacity-100 lg:active:bg-white lg:dark:bg-gray-800 lg:p-2\r\n      ${toggleClass}`}\r\n      onClick={handleClick}\r\n    >\r\n      {children}\r\n    </button>\r\n    // TAB END\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"@github/markdown-toolbar-element\";\r\nimport \"./Toolbar.css\";\r\n\r\nexport default function Toolbar({ darkMode }) {\r\n  return (\r\n    // MARKDOWN TOOLBAR\r\n    <div className=\"toolbar-container z-20 px-8 w-full absolute top-4 left-0 flex justify-center\">\r\n      <markdown-toolbar\r\n        for=\"editor\"\r\n        id=\"toolbar\"\r\n        class={`toolbar px-0.5 py-2 bg-white dark:bg-gray-800  flex flex-wrap justify-center divide-x dark:divide-gray-700 border rounded-lg shadow dark:border-gray-700 text-gray-900 dark:text-gray-200\r\n        ${darkMode ? \"toolbar-dark\" : \"toolbar-light\"}`}\r\n      >\r\n        <md-bold class=\"toolbar-item\">\r\n          <span class=\"material-icons\">format_bold</span>\r\n        </md-bold>\r\n        <md-italic class=\"toolbar-item\">\r\n          <span class=\"material-icons\">format_italic</span>\r\n        </md-italic>\r\n        <md-strikethrough class=\"toolbar-item\">\r\n          <span class=\"material-icons\">format_strikethrough</span>\r\n        </md-strikethrough>\r\n        <md-header class=\"toolbar-item\">\r\n          <span class=\"material-icons\">format_size</span>\r\n        </md-header>\r\n        <md-quote class=\"toolbar-item\">\r\n          <span class=\"material-icons\">format_quote</span>\r\n        </md-quote>\r\n        <md-code class=\"toolbar-item\">\r\n          <span class=\"material-icons\">code</span>\r\n        </md-code>\r\n        <md-link class=\"toolbar-item\">\r\n          <span class=\"material-icons\">link</span>\r\n        </md-link>\r\n        <md-image class=\"toolbar-item\">\r\n          <span class=\"material-icons\">insert_photo</span>\r\n        </md-image>\r\n        <md-unordered-list class=\"toolbar-item\">\r\n          <span class=\"material-icons\">format_list_bulleted</span>\r\n        </md-unordered-list>\r\n        <md-ordered-list class=\"toolbar-item\">\r\n          <span class=\"material-icons\">format_list_numbered</span>\r\n        </md-ordered-list>\r\n        <md-task-list class=\"toolbar-item\">\r\n          <span class=\"material-icons\">checklist</span>\r\n        </md-task-list>\r\n      </markdown-toolbar>\r\n    </div>\r\n    // MARKDOWN TOOLBAR END\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Toolbar from \"./Toolbar/Toolbar\";\r\n\r\nexport default function Editor({ toggleTab, darkMode, markdown, setMarkdown }) {\r\n  return (\r\n    <section\r\n      className={`editor-container max-w-100vw h-full relative pt-0 px-4 pb-4 bg-gray-50 dark:bg-gray-900 transition-all duration-300 ease-linear       \r\n              lg:block lg:pr-0\r\n              ${toggleTab ? \"block\" : \"hidden\"}`}\r\n    >\r\n      {/* MARKDOWN TOOLBAR */}\r\n      <Toolbar darkMode={darkMode} />\r\n      {/* MARKDOWN TOOLBAR END */}\r\n\r\n      {/* EDITOR/TEXTAREA */}\r\n      <textarea\r\n        id=\"editor\"\r\n        className={`markdown-body -mt-px h-100vh-133px w-full overflow-auto resize-none outline-none\trelative p-3.5 pt-24 border shadow dark:bg-gray-800 dark:border-gray-700 sm:p-11 sm:pt-20 ${\r\n          darkMode ? \"markdown-body-dark\" : \"markdown-body-light\"\r\n        }`}\r\n        onChange={(e) => setMarkdown(e.target.value)}\r\n        value={markdown}\r\n        name=\"w3review\"\r\n        autoFocus\r\n        spellCheck=\"false\"\r\n      ></textarea>\r\n      {/* EDITOR/TEXTAREA END*/}\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport remarkGfm from \"remark-gfm\";\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport {\r\n  vs,\r\n  vscDarkPlus\r\n} from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\n\r\nexport default function Previewer({ toggleTab, darkMode, markdown }) {\r\n  return (\r\n    <section\r\n      className={`previewer-container max-w-100vw h-full min-w-full pt-0 px-4 pb-4 bg-gray-50 dark:bg-gray-900 transition-all duration-300 ease-linear     \r\n        lg:block\r\n        ${!toggleTab ? \"block\" : \"hidden\"}`}\r\n    >\r\n      {/* PREVIEWER */}\r\n      <ReactMarkdown\r\n        id=\"preview\"\r\n        className={`markdown-body -mt-px h-100vh-133px min-w-full overflow-auto p-3.5 bg-white border shadow dark:bg-gray-800 dark:border-gray-700 sm:p-11 ${\r\n          darkMode ? \"markdown-body-dark\" : \"markdown-body-light\"\r\n        }`}\r\n        children={markdown}\r\n        remarkPlugins={[remarkGfm]}\r\n        components={{\r\n          code({ node, inline, className, children, ...props }) {\r\n            const match = /language-(\\w+)/.exec(className || \"\");\r\n            return !inline && match ? (\r\n              <SyntaxHighlighter\r\n                children={String(children).replace(/\\n$/, \"\")}\r\n                style={darkMode ? vscDarkPlus : vs}\r\n                customStyle={{ margin: \"0\", padding: \"0\" }}\r\n                language={match[1]}\r\n                PreTag=\"div\"\r\n                {...props}\r\n              />\r\n            ) : (\r\n              <code className={className} {...props}>\r\n                {children}\r\n              </code>\r\n            );\r\n          }\r\n        }}\r\n      />\r\n      {/* PREVIEWER END*/}\r\n    </section>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport ModalBox from \"./components/ModalBox\";\nimport Nav from \"./components/Nav\";\nimport Tab from \"./components/Tab\";\nimport Editor from \"./components/Editor\";\nimport Previewer from \"./components/Previewer\";\nimport Button from \"./components/Button\";\nimport \"./App.css\";\nimport \"./index.css\";\nimport \"github-markdown-css\";\n\nexport default function App() {\n  const [markdown, setMarkdown] = useState(\n    !localStorage.getItem(\"storedMarkdown\")\n      ? placeholder\n      : localStorage.getItem(\"storedMarkdown\")\n  );\n\n  const [darkMode, setDarkMode] = useState(\n    !localStorage.getItem(\"storedDarkMode\")\n      ? false\n      : JSON.parse(localStorage.getItem(\"storedDarkMode\"))\n  );\n\n  const [toggleTab, setToggleTab] = useState(true);\n\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (storageAvailable(\"localStorage\")) {\n      localStorage.setItem(\"storedMarkdown\", markdown);\n    } else {\n      console.log(\"localStorage unavailable\");\n    }\n  }, [markdown]);\n\n  useEffect(() => {\n    if (storageAvailable(\"localStorage\")) {\n      localStorage.setItem(\"storedDarkMode\", darkMode);\n    } else {\n      console.log(\"localStorage unavailable\");\n    }\n  }, [darkMode]);\n\n  const copyToClipboard = async () => {\n    await navigator.clipboard.writeText(markdown);\n    alert(\"Your markdown has been copied to your clipboard.\");\n  };\n\n  return (\n    <div className={`DARK-MODE-WRAPPER ${darkMode && \"dark\"}`}>\n      <div className=\"App h-screen font-sans bg-gray-50 dark:bg-gray-900 text-black dark:text-gray-100 transition-all duration-300 ease-linear\">\n        {/* NAV BAR */}\n        <Nav darkMode={darkMode} setDarkMode={setDarkMode} />\n        {/* NAV BAR END */}\n\n        <div className=\"relative\">\n          {/* TABS AND BUTTONS CONTAINER */}\n          <div className=\"flex justify-between \">\n            {/* TABS */}\n            <div className=\" flex items-end mt-4 mx-4 lg:w-tab-area-w lg:justify-between\">\n              {/* EDITOR TAB */}\n              <Tab\n                toggleClass={\n                  toggleTab\n                    ? \"bg-white border-b-0 border opacity-100  active:bg-gray-50 dark:bg-gray-800 p-2\"\n                    : \"bg-gray-300 px-2 py-1 border-b opacity-75 active:bg-gray-400 dark:bg-gray-700 dark:active:bg-gray-800 \"\n                }\n                handleClick={() => setToggleTab(true)}\n              >\n                Editor\n              </Tab>\n              {/* EDITOR TAB END */}\n\n              {/* PREVIEWER TAB */}\n              <Tab\n                toggleClass={\n                  toggleTab\n                    ? \"bg-gray-300 px-2 py-1 border-b opacity-75 active:bg-gray-400 dark:bg-gray-700 dark:active:bg-gray-800\"\n                    : \"bg-white border-b-0 border opacity-100  active:bg-gray-50 dark:bg-gray-800 p-2\"\n                }\n                handleClick={() => setToggleTab(false)}\n              >\n                Previewer\n              </Tab>\n              {/* PREVIEWER TAB END */}\n            </div>\n            {/* TABS END */}\n\n            {/* CHEAT SHEET AND COPY TO CLIPBOARD BUTTONS */}\n            <div className=\"mt-4 mx-4 flex\">\n              {/* CHEAT SHEET BUTTON*/}\n              <Button\n                displayTooltip={true}\n                aria=\"tooltip2\"\n                handleClick={() => setShowModal(true)}\n                tooltipId=\"tooltip2\"\n                tooltipInfo=\"Markdown cheat&nbsp;sheet\"\n                icon=\"description\"\n                addClass=\"mr-4\"\n              />\n              {/* CHEAT SHEET BUTTON END*/}\n\n              {/* CHEAT SHEET MODAL BOX */}\n              <ModalBox\n                showModal={showModal}\n                setShowModal={setShowModal}\n                darkMode={darkMode}\n              />\n              {/* CHEAT SHEET MODAL BOX END */}\n\n              {/* COPY TO CLIPBOARD BUTTON */}\n              <Button\n                displayTooltip={true}\n                aria=\"tooltip3\"\n                handleClick={copyToClipboard}\n                tooltipId=\"tooltip3\"\n                tooltipInfo=\"Copy markdown\"\n                icon=\"content_copy\"\n              />\n              {/* COPY TO CLIPBOARD BUTTON */}\n            </div>\n            {/* CHEAT SHEET AND COPY TO CLIPBOARD BUTTONS END */}\n          </div>\n          {/* TABS AND BUTTONS CONTAINER END*/}\n\n          {/* EDITOR AND PREVIEWER CONTAINER */}\n          <div className=\"lg:grid lg:grid-cols-1fr2x\">\n            {/* EDITOR */}\n            <Editor\n              toggleTab={toggleTab}\n              darkMode={darkMode}\n              markdown={markdown}\n              setMarkdown={setMarkdown}\n            />\n            {/* EDITOR END */}\n\n            {/* PREVIEWER */}\n            <Previewer\n              toggleTab={toggleTab}\n              darkMode={darkMode}\n              markdown={markdown}\n            />\n            {/* PREVIEWER END*/}\n          </div>\n          {/* EDITOR AND PREVIEWER CONTAINER END */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Markdown placeholder\nconst placeholder = `\n# Welcome to my React Markdown Previewer!\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`js\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.org), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\n`;\n\n// Detects whether localStorage is both supported and available\nfunction storageAvailable(type) {\n  var storage;\n  try {\n    storage = window[type];\n    var x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return (\n      e instanceof DOMException &&\n      // everything except Firefox\n      (e.code === 22 ||\n        // Firefox\n        e.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        e.name === \"QuotaExceededError\" ||\n        // Firefox\n        e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n      // acknowledge QuotaExceededError only if there's something already stored\n      storage &&\n      storage.length !== 0\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}